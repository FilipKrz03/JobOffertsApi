// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OffersAndUsersDatabaseMigratorService.DbContexts;

#nullable disable

namespace OffersAndUsersDatabaseMigratorService.Migrations
{
    [DbContext(typeof(OffersApiDbContext))]
    partial class OffersApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JobOfferTechnology", b =>
                {
                    b.Property<Guid>("JobOffersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TechnologiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobOffersId", "TechnologiesId");

                    b.HasIndex("TechnologiesId");

                    b.ToTable("JobOfferTechnology");
                });

            modelBuilder.Entity("JobOfferUser", b =>
                {
                    b.Property<Guid>("FollowingJobOffersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FollowingUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FollowingJobOffersId", "FollowingUsersId");

                    b.HasIndex("FollowingUsersId");

                    b.ToTable("JobOfferUser");
                });

            modelBuilder.Entity("OffersAndUsersDatabaseMigratorService.Entities.JobOffer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EarningsFrom")
                        .HasColumnType("int");

                    b.Property<int?>("EarningsTo")
                        .HasColumnType("int");

                    b.Property<string>("Localization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seniority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobOffers");
                });

            modelBuilder.Entity("OffersAndUsersDatabaseMigratorService.Entities.Technology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TechnologyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("OffersAndUsersDatabaseMigratorService.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JobOfferTechnology", b =>
                {
                    b.HasOne("OffersAndUsersDatabaseMigratorService.Entities.JobOffer", null)
                        .WithMany()
                        .HasForeignKey("JobOffersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OffersAndUsersDatabaseMigratorService.Entities.Technology", null)
                        .WithMany()
                        .HasForeignKey("TechnologiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobOfferUser", b =>
                {
                    b.HasOne("OffersAndUsersDatabaseMigratorService.Entities.JobOffer", null)
                        .WithMany()
                        .HasForeignKey("FollowingJobOffersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OffersAndUsersDatabaseMigratorService.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("FollowingUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
